generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "cockroachdb"
  url      = env("DATABASE_URL")
}

model admin {
  id       String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  eiin     BigInt @unique
  password String
}

model users {
  id       String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  eiin     BigInt
  username String @unique
  password String
}

model workspace {
  workspace_id String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name         String  @default("My Workspace")
  username     String
  class        Int?
  section      String?
  group        String?
  roll_start   Int?
  roll_end     Int?
  total        Int?
  year         Int?
  default      Boolean @default(false)
  description  String?
}

model pdf {
  form_id      String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  workspace_id String
  url          String
}

model form_ocr_output {
  id           BigInt   @id @default(autoincrement())
  form_id      String   @unique
  workspace_id String
  eiin         String
  ocr_result   Json
  created_at   DateTime @default(now())
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model prisma_migrations {
  c1 String?
  c2 String?
  c3 String?
  c4 String?
  c5 String?
  c6 String?
  c7 String?
  c8 BigInt?

  @@map("_prisma_migrations")
  @@ignore
}

model correction_citycorporation {
  id                  String              @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name                String
  max_wardnumber      Int
  district_id         String              @db.Uuid
  correction_district correction_district @relation(fields: [district_id], references: [id])
}

model correction_district {
  id                         String                       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name                       String
  division_id                String                       @db.Uuid
  correction_citycorporation correction_citycorporation[]
  correction_division        correction_division          @relation(fields: [division_id], references: [id])
  correction_paurashava      correction_paurashava[]
  correction_postoffice      correction_postoffice[]
  correction_thana           correction_thana[]
  correction_upazilla        correction_upazilla[]
}

model correction_division {
  id                  String                @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name                String
  correction_district correction_district[]
}

model correction_paurashava {
  id                  String              @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name                String
  max_wardnumber      Int
  district_id         String              @db.Uuid
  correction_district correction_district @relation(fields: [district_id], references: [id])
}

model correction_postoffice {
  id                  String              @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name                String
  post_code           Int
  district_id         String              @db.Uuid
  correction_district correction_district @relation(fields: [district_id], references: [id])
}

model correction_thana {
  id                  String              @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name                String
  district_id         String              @db.Uuid
  correction_district correction_district @relation(fields: [district_id], references: [id])
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model correction_union {
  c1 String?
  c2 String?
  c3 String?

  @@ignore
}

model correction_upazilla {
  id                  String              @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name                String
  district_id         String              @db.Uuid
  correction_district correction_district @relation(fields: [district_id], references: [id])
}

model form_draft {
  id           BigInt   @id @default(autoincrement())
  form_id      String   @unique
  workspace_id String
  eiin         String
  draft        Json
  created_at   DateTime @default(now())
}

model form_validated {
  id           BigInt   @id @default(autoincrement())
  form_id      String   @unique
  workspace_id String
  eiin         String
  validated    Json
  created_at   DateTime @default(now())
}
